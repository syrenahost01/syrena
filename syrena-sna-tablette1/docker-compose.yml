version: '3.3'
services:
  kafka-zookeeper:
    image: confluentinc/cp-zookeeper:${ZOOKEEPER_VERSION}
    restart: always
    container_name: ${CONTAINER_NAMESPACE}-kafka-zookeeper
    hostname: kafka-zookeeper
    env_file: .env
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    volumes:
      - kafka-zookeeper-log:/var/lib/zookeeper/log
      - kafka-zookeeper-secrets:/etc/zookeeper/secrets
      - kafka-zookeeper-data:/var/lib/zookeeper/data
    networks:
      - network

  kafka-broker:
    image: confluentinc/cp-kafka:${KAFKA_VERSION}
    restart: always
    container_name: ${CONTAINER_NAMESPACE}-kafka-broker
    hostname: kafka-broker
    env_file: .env
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=${CONTAINER_NAMESPACE}-kafka-zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://syrena-sna-trg-local.duckdns.org:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    volumes:
      - kafka-broker-data:/var/lib/kafka/data
      - kafka-broker-secrets:/etc/kafka/secrets
    networks:
      - network
    ports:
      - "9092:9092"

  kafka-mirrormaker-to-sna:
    image: zeelos/kafka-mirrormaker:${MIRRORMAKER_VERSION}
    container_name: ${CONTAINER_NAMESPACE}-kafka-mirrormaker-to-sna
    hostname: kafka-mirrormaker-to-sna
    environment:
      - MIRRORMAKER_WHITE_LIST=${CONTAINER_SNA_NAMESPACE}-tablette
      - MIRRORMAKER_ABORT_ON_SEND_FAILURE=true
      - MIRRORMAKER_OFFSET_COMMIT_INTERVAL=60000
      - MIRRORMAKER_NUM_STREAMS=1
      #- MIRRORMAKER_CONSUMER_REBALANCE_LISTENER=org.mypackage.MyListener
      #- MIRRORMAKER_CONSUMER_REBALANCE_LISTENER_ARGS=arg1,arg2
      - MIRRORMAKER_MESSAGE_HANDLER=com.opencore.RenameTopicHandler
      - MIRRORMAKER_MESSAGE_HANDLER_ARGS=${CONTAINER_SNA_NAMESPACE}-tablette,${CONTAINER_SNA_NAMESPACE}-local
      - CONSUMER_BOOTSTRAP_SERVERS=${CONTAINER_NAMESPACE}-kafka-broker:9092
      - CONSUMER_GROUP_ID=${CONTAINER_NAMESPACE}-mirrormaker-to-sna
      - CONSUMER_AUTO_OFFSET_RESET=earliest
      - PRODUCER_BOOTSTRAP_SERVERS=syrena-sna-trg-local.duckdns.org:9092
      - CLASSPATH=/home/mmchangetopic-1.0-SNAPSHOT.jar
    volumes:
      - ./mmchangetopic/mmchangetopic-1.0-SNAPSHOT.jar:/home/mmchangetopic-1.0-SNAPSHOT.jar
      - ./mmchangetopic/launch:/etc/confluent/docker/launch
    networks:
      - network

  kafka-mirrormaker-from-sna:
    image: zeelos/kafka-mirrormaker:${MIRRORMAKER_VERSION}
    container_name: ${CONTAINER_NAMESPACE}-kafka-mirrormaker-from-sna
    hostname: kafka-mirrormaker-from-sna
    environment:
      - MIRRORMAKER_WHITE_LIST=${CONTAINER_SNA_NAMESPACE}-local
      - MIRRORMAKER_ABORT_ON_SEND_FAILURE=true
      - MIRRORMAKER_OFFSET_COMMIT_INTERVAL=60000
      - MIRRORMAKER_NUM_STREAMS=1
      #- MIRRORMAKER_CONSUMER_REBALANCE_LISTENER=org.mypackage.MyListener
      #- MIRRORMAKER_CONSUMER_REBALANCE_LISTENER_ARGS=arg1,arg2
      #- MIRRORMAKER_MESSAGE_HANDLER=org.mypackage.MyHandler
      #- MIRRORMAKER_MESSAGE_HANDLER_ARGS=arg1,arg2
      - CONSUMER_BOOTSTRAP_SERVERS=syrena-sna-trg-local.duckdns.org:9092
      - CONSUMER_GROUP_ID=${CONTAINER_NAMESPACE}-mirrormaker-from-sna
      - CONSUMER_AUTO_OFFSET_RESET=earliest
      - PRODUCER_BOOTSTRAP_SERVERS=${CONTAINER_NAMESPACE}-kafka-broker:9092
      #- CLASSPATH=/home/mmchangetopic-1.0-SNAPSHOT.jar
    #volumes:
      #- ./mmchangetopic/mmchangetopic-1.0-SNAPSHOT.jar:/home/mmchangetopic-1.0-SNAPSHOT.jar
    networks:
      - network

  telegraf:
    image: telegraf:${TELEGRAF_VERSION}
    container_name: ${CONTAINER_NAMESPACE}-telegraf
    hostname: telegraf
    environment:
      - KAFKA_LOCAL_TOPIC=${CONTAINER_SNA_NAMESPACE}-tablette
      - KAFKA_REMOTE_TOPIC=${CONTAINER_SNA_NAMESPACE}-local
      - KAFKA_BROKER=${CONTAINER_NAMESPACE}-kafka-broker:9092
      - KAFKA_CONSUMER_GROUP=${CONTAINER_NAMESPACE}-telegraf
      - INFLUXDB=http://${CONTAINER_NAMESPACE}-influxdb:8086
    volumes:
      - ./telegraf/telegraf-tablette.conf:/etc/telegraf/telegraf.conf:ro
    networks:
      - network

  influxdb:
    image: influxdb:${INFLUXDB_VERSION}
    container_name: ${CONTAINER_NAMESPACE}-influxdb
    hostname: influxdb
    volumes:
      - influxdb-data:/var/lib/influxdb
    networks:
      - network

  grafana:
    image: grafana:${GRAFANA_VERSION}-plugins
    container_name: ${CONTAINER_NAMESPACE}-grafana
    hostname: grafana
    volumes:
      - ./grafana/grafana-tablette.ini:/etc/grafana/grafana.ini
      - grafana-data:/var/lib/grafana
    networks:
      - network
    ports:
      - "3000:3000"

volumes:
  kafka-zookeeper-log:
  kafka-zookeeper-secrets:
  kafka-zookeeper-data:
  kafka-broker-data:
  kafka-broker-secrets:
  influxdb-data:
  grafana-data:

networks:
  network:
